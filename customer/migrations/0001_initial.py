# Generated by Django 5.2.6 on 2025-10-13 20:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "UserID",
                    models.BigIntegerField(
                        db_column="UserID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "FullName",
                    models.CharField(
                        blank=True, db_column="FullName", max_length=100, null=True
                    ),
                ),
                (
                    "UserName",
                    models.CharField(
                        blank=True,
                        db_column="UserName",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True,
                        db_column="Email",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "password",
                    models.CharField(db_column="PasswordHash", max_length=255),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "Role",
                    models.CharField(
                        blank=True,
                        choices=[("CUSTOMER", "Customer"), ("ADMIN", "Admin")],
                        db_column="Role",
                        default="CUSTOMER",
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "User",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BrokerageAccount",
            fields=[
                (
                    "AccountID",
                    models.BigIntegerField(
                        db_column="AccountID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cash_balance",
                    models.DecimalField(
                        db_column="Balance",
                        decimal_places=2,
                        default=0.0,
                        max_digits=15,
                    ),
                ),
            ],
            options={
                "db_table": "BrokerageAccount",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketSchedule",
            fields=[
                (
                    "ScheduleID",
                    models.BigIntegerField(
                        db_column="ScheduleID", primary_key=True, serialize=False
                    ),
                ),
                ("status", models.CharField(db_column="Status", max_length=10)),
                ("open_hour", models.IntegerField(db_column="OpenHour")),
                ("open_minute", models.IntegerField(db_column="OpenMinute")),
                ("close_hour", models.IntegerField(db_column="CloseHour")),
                ("close_minute", models.IntegerField(db_column="CloseMinute")),
                ("holiday", models.BooleanField(db_column="Holiday", default=False)),
            ],
            options={
                "db_table": "MarketSchedule",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="OrderID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")],
                        db_column="Action",
                        max_length=10,
                    ),
                ),
                ("quantity", models.BigIntegerField(db_column="Quantity")),
                ("status", models.CharField(db_column="Status", max_length=20)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CreatedAt"),
                ),
                (
                    "executed_at",
                    models.DateTimeField(blank=True, db_column="ExecutedAt", null=True),
                ),
            ],
            options={
                "db_table": "Order",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="PositionID", primary_key=True, serialize=False
                    ),
                ),
                ("quantity", models.BigIntegerField(db_column="Quantity")),
            ],
            options={
                "db_table": "Position",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PriceTick",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="TickID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, db_column="Timestamp"),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_column="Price", decimal_places=2, max_digits=12
                    ),
                ),
            ],
            options={
                "db_table": "PriceTick",
                "ordering": ["-timestamp"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="StockID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "ticker",
                    models.CharField(db_column="Ticker", max_length=10, unique=True),
                ),
                ("name", models.CharField(db_column="CompanyName", max_length=100)),
                (
                    "initial_price",
                    models.DecimalField(
                        db_column="InitialPrice", decimal_places=2, max_digits=12
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        db_column="CurrentPrice", decimal_places=2, max_digits=12
                    ),
                ),
                (
                    "opening_price",
                    models.DecimalField(
                        db_column="OpeningPrice", decimal_places=2, max_digits=12
                    ),
                ),
                (
                    "day_high",
                    models.DecimalField(
                        db_column="DayHigh", decimal_places=2, max_digits=12
                    ),
                ),
                (
                    "day_low",
                    models.DecimalField(
                        db_column="DayLow", decimal_places=2, max_digits=12
                    ),
                ),
                ("float_shares", models.BigIntegerField(db_column="FloatShares")),
            ],
            options={
                "db_table": "Stock",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="TradeID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "executed_price",
                    models.DecimalField(
                        db_column="ExecutedPrice", decimal_places=2, max_digits=12
                    ),
                ),
                ("executed_qty", models.BigIntegerField(db_column="ExecutedQty")),
                (
                    "executed_time",
                    models.DateTimeField(auto_now_add=True, db_column="ExecutedTime"),
                ),
            ],
            options={
                "db_table": "Trade",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        db_column="TransactionID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")],
                        db_column="TransType",
                        max_length=20,
                    ),
                ),
                (
                    "price_at_transaction",
                    models.DecimalField(
                        db_column="Amount", decimal_places=2, max_digits=12
                    ),
                ),
            ],
            options={
                "db_table": "Transaction",
                "managed": False,
            },
        ),
    ]
